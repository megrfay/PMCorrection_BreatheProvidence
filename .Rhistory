library(jsonlite)
mydata <- fromJSON("https://aqs.epa.gov/data/api/sampleData/byCounty?email=megan_fay@brown.edu&key=russetmallard73&param=61103,61104&bdate=20230301&edate=20230330&state=44&county=007")
View(mydata)
View(mydata)
library(jsonlite)
mydata <- fromJSON("https://aqs.epa.gov/data/api/sampleData/byCounty?email=megan_fay@brown.edu&key=russetmallard73&param=61103,61104&bdate=20230301&edate=20230330&state=44&county=007")
df <- mydata[2]
View(mydata)
df <- mydata[[2]]
View(df)
str(df)
df <- mydata[[2]]
df_wide <- pivot_wider(df, names_from = parameter, values_from = sample_measurement, names_sep = "_")
library(tidyr)
df <- mydata[[2]]
df_wide <- pivot_wider(df, names_from = parameter, values_from = sample_measurement, names_sep = "_")
View(df_wide)
?pivot_wider
df <- mydata[[2]]
df_wide <- pivot_wider(df, id_cols = parameter, names_from = parameter, values_from = sample_measurement, names_sep = "_")
df <- mydata[[2]]
df_wide <- pivot_wider(df, names_from = parameter, values_from = sample_measurement, names_sep = "_")
df <- mydata[[2]]
param_list <- split(df, df$parameter)
df <- mydata[[2]]
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WS_df <- param_list$`Wind Speed - Resultant`
View(WD_df)
df <- mydata[[2]]
df$datetime_local <- paste(df$date_local, df$time_local)
df$datetime_local <- as.POSIXct(df$datetime_local, format = "%Y-%m-%d %H:%M:%S")
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WS_df <- param_list$`Wind Speed - Resultant`
View(WD_df)
df <- mydata[[2]]
df$datetime_local <- paste(df$date_local, df$time_local)
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WS_df <- param_list$`Wind Speed - Resultant`
df <- mydata[[2]]
df$datetime_local <- paste(df$date_local, df$time_local)
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WS_df <- param_list$`Wind Speed - Resultant`
df <- mydata[[2]]
df$datetime_local <- paste(df$date_local, df$time_local)
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WS_df <- param_list$`Wind Speed - Resultant`
wind_df <- merge(WD_df, WS_df, by = "datetime_local", all = FALSE)
View(wind_df)
?rename
library(dplyr)
df <- mydata[[2]]
df$datetime_local <- paste(df$date_local, df$time_local)
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WD_df <- rename(WD_df, wd = sample_measurement)
WS_df <- param_list$`Wind Speed - Resultant`
WS_df <- rename(WS_df, ws = sample_measurement)
wind_df <- merge(WD_df, WS_df, by = "datetime_local", all = FALSE)
?subset
df <- mydata[[2]]
df$datetime_local <- paste(df$date_local, df$time_local)
param_list <- split(df, df$parameter)
WD_df <- param_list$`Wind Direction - Resultant`
WD_df <- rename(WD_df, wd = sample_measurement)
WS_df <- param_list$`Wind Speed - Resultant`
WS_df <- rename(WS_df, ws = sample_measurement)
wind_df <- merge(WD_df, WS_df, by = "datetime_local", all = FALSE)
myvars <- c("datetime_local","site_number.x", "ws", "wd")
wind_df <- wind_df[myvars]
#Library
library(lubridate)
library(dplyr)
library(tidyverse)
library(ggpubr)
library(openair)
library(openairmaps)
library(ggplot2)
library(worldmet)
library(readr)
#Library
library(lubridate)
library(dplyr)
library(tidyverse)
library(ggpubr)
library(openair)
library(openairmaps)
library(ggplot2)
library(worldmet)
library(readr)
file_path <- "PVD_PM_Cal_6Month.csv"
if (!file.exists(file_path)) {
stop("File not found: ", file_path)
} else {
PVD_PM_Cal_6Month <- read_csv("PVD_PM_Cal_6Month.csv",
col_types = cols(...1 = col_skip(), date = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
PM2_5_RIDEM = col_number(), date_hourly = col_datetime(format = "%Y-%m-%d %H:%M:%S"),
rh = col_number(), pm2_5_corrected = col_number(),
lat = col_number(), lon = col_number(),
pm2_5_dry = col_number(), pm2_5 = col_number()))
View(PVD_PM_Cal_6Month)
}
##Open Air Analysis
library(openair)
library(worldmet)
library(openairmaps)
#Find Met Data
getMeta(lat = 41.8, lon = -71.4, returnMap = TRUE)
pvd_met <- importNOAA(code = "997278-99999", year = 2022:2023)
pvd_met
windRose(pvd_met)
#Merge PM and Met Data
PM_met <- merge(PVD_PM_Cal_6Month, select(pvd_met, -latitude, -longitude),  by = "date")
#View(PM_met)
plot <- ggplot(PM_met, aes(x = date, y = pm2_5_dry, color = code.x)) +
geom_line() +
labs(x = "Date", y = "pm2_5_dry", title = "Line Plot of pm2_5_dry Over Time") +
theme_light()
library(stats)
kruskal.test(pm2_5_dry ~ F_Class, code.x = PM_met)
View(PM_met)
kruskal.test(pm2_5_dry ~ F_Class, code.x, data = PM_met)
kruskal.test(pm2_5_dry ~ code.x, data = PM_met)
0.05/16
?compare_means
comp_pm <- compare_means(pm2_5_dry ~ code.x,  data = PM_met, p.adjust.method = "bonferroni")
comp_pm
View(comp_pm)
length(which(comp_pm$p.signif = "ns"))
length(which(comp_pm$p.signif == "ns"))
comp_pm_raw <- compare_means(pm2_5 ~ code.x,  data = PM_met, p.adjust.method = "bonferroni")
length(which(comp_pm_raw$p.signif == "ns"))
#High school and beyond (hsb2) dataset: 200 obs
#scores on standardized tests of reading (read), writing (write), mathematics (math) and social studies (socst).
#demographic info: gender (female), socio-economic status (ses) ethnic background (race)
source("http://www.uvm.edu/~rsingle/stat221/data/scripts-221.R")
dat <- otherdata("hsb2.dat")
boxplot(write ~ ses, data=dat)
mod <- lm(write ~ ses, data=dat)
anova(mod)
class(dat$ses)
#re-code SES as a character variable
dat$ses2 <- NULL
dat$ses2[dat$ses==1] <- "low"
dat$ses2[dat$ses==2] <- "med"
dat$ses2[dat$ses==3] <- "high"
boxplot(write ~ ses2, data=dat) #alphabetical variable ordering
#re-code SES as a factor
dat$ses2 <- factor(dat$ses2, levels=c("low","med","high"))
class(dat$ses2)
boxplot(write ~ ses2, data=dat) #better variable ordering
vars = tapply(dat$write, dat$ses2, var)
s1 <- vars[1]
s2 <- vars[2]
s3 <- vars[3]
size = tapply(dat$write, dat$ses2, length)
n1 <- size[1]
n2 <- size[2]
n3 <- size[3]
MSE <- ((n1-1)*(s1) + (n2-1)*(s2) + (n3-1)*(s3))/(n1+n2+n3 -3)
MSE
mean.write = tapply(dat$write, dat$ses2, mean);names(mean.write)=NULL
mean.write = tapply(dat$write, dat$ses2, mean);names(mean.write)=NULL
mean.write;qt(0.025, 197)
l95 = mean.write[3]+qt(0.025,197)*sqrt(MSE[3])
l95 = mean.write[3]+qt(0.025,197)*sqrt(MSE/r[3])
l95 = mean.write[3]+qt(0.025,197)*sqrt(MSE/n3)
